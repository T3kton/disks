#!/bin/bash
set -e
set -x

# $1 - output filename
# $2 - path to kernel
# $3 - path to initrd
# $4 - path to boot config
# $5 - path config-init (optional)
# $6 - path config.json (optional)
# $7 - path to boot menu (optional)

WORK_DIR="build.images/isotmp"

if [ ! -d $WORK_DIR ]
then
  mkdir -p $WORK_DIR
else
  rm -ifr ./${WORK_DIR}/
  #mkdir -p $WORK_DIR
fi

ISO_BIN="/usr/lib/ISOLINUX/isolinux.bin"
LD32="/usr/lib/syslinux/modules/bios/ldlinux.c32"
EFI_LD32="/usr/lib/syslinux/modules/efi32/ldlinux.e32"
EFI_LD64="/usr/lib/syslinux/modules/efi64/ldlinux.e64"
EFI_BIN32="/usr/lib/SYSLINUX.EFI/efi32/syslinux.efi"
EFI_BIN64="/usr/lib/SYSLINUX.EFI/efi64/syslinux.efi"

if [ ! -f "$ISO_BIN"  ];
then
  echo "isolinux.bin not found install isolinux"
  exit 1
fi

if [ ! -f "$EFI_BIN64"  ];
then
  echo "syslinux.efi not found install syslinux-efi"
  exit 1
fi

if [ ! -f "$LD32"  ];
then
  echo "ldlinux.c32 not found install syslinux-common"
  exit 1
fi

rm -f $1

mkdir -p $WORK_DIR/isolinux

echo "Copying in boot files..."
cp $ISO_BIN $WORK_DIR/isolinux
cp $LD32 $WORK_DIR/isolinux
# mkdir -p $WORK_DIR/efi/boot/
# cp $EFI_BIN32 $WORK_DIR/efi/boot/bootia32.efi
# cp $EFI_BIN64 $WORK_DIR/efi/boot/bootx64.efi
# cp $EFI_LD32 $WORK_DIR/efi/boot/
# cp $EFI_LD64 $WORK_DIR/efi/boot/
#cp build.images/efi/efiboot.img $WORK_DIR/isolinux

echo "Copying in kernel and image..."
cp $2 $WORK_DIR/vmlinuz.img

if [ "x$5" != "x" ] || [ "x$6" != "x" ]
then
  echo "Injecting custom config..."
  cat $3 | gunzip > /tmp/initrd.img
  if [ "x$5" != "x" ] && [ -x "$5" ]
  then
    cp -f $5 ./config-init
    echo "./config-init" | cpio -H newc -o -A -F /tmp/initrd.img
    rm ./config-init
  fi
  if [ "x$6" != "x" ] && [ -r "$6" ]
  then
    cp -f $6 ./config.json
    echo "./config.json" | cpio -H newc -o -A -F /tmp/initrd.img
    rm ./config.json
  fi
  cat /tmp/initrd.img | gzip -9 > $WORK_DIR/initrd.img
else
  cp $3 $WORK_DIR/initrd.img
fi

echo "Copying in boot config..."
cp -f $4 $WORK_DIR/isolinux.cfg
# cp -f $4 $WORK_DIR/efi/boot/syslinux.cfg
# mkdir -p $WORK_DIR/boot/
# cp -f $4 $WORK_DIR/boot/syslinux.cfg
# cp -f $4 $WORK_DIR/syslinux.cfg

if [ "x$7" != "x" ] && [ -r "$7" ]
then
  echo "Injecting custom menu..."
  cp -f $7 $WORK_DIR/extlinux.mnu
fi

#genisoimage -o $1 -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -eltorito-alt-boot -eltorito-boot isolinux/efiboot.img -no-emul-boot -V $( basename $1 .iso ) -v $WORK_DIR
genisoimage -o $1 -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -V $( basename $1 .iso ) -v $WORK_DIR

echo "Done!"
