#!/bin/bash
set -e
set -x

# $1 - output filename
# $2 - path to kernel
# $3 - path to initrd
# $4 - path to cmdline
# $5 - path config-init (optional)
# $6 - path config.json (optional)

WORK_DIR="build.images/isotmp"

if [ -d $WORK_DIR ]
then
  rm -ifr ./${WORK_DIR}/
fi

ISO_BIN="/usr/lib/ISOLINUX/isolinux.bin"
ISO_BOOT="/usr/lib/ISOLINUX/isohdpfx.bin"
LD32="/usr/lib/syslinux/modules/bios/ldlinux.c32"

if [ ! -f "$ISO_BIN"  ];
then
  echo "isolinux.bin not found install isolinux"
  exit 1
fi

if [ ! -f "$LD32"  ];
then
  echo "ldlinux.c32 not found install syslinux-common"
  exit 1
fi

if [ ! -f "/usr/bin/xorriso"  ];
then
  echo "xorriso not found install xorriso"
  exit 1
fi

rm -f $1

mkdir -p $WORK_DIR

echo "Copying in kernel and image..."
cp $2 $WORK_DIR/vmlinuz

if [ "x$5" != "x" ] || [ "x$6" != "x" ]
then
  echo "Injecting custom config..."
  cat $3 | gunzip > /tmp/initrd.img
  if [ "x$5" != "x" ] && [ -x "$5" ]
  then
    cp -f $5 ./config-init
    echo "./config-init" | cpio -H newc -o -A -F /tmp/initrd.img
    rm ./config-init
  fi
  if [ "x$6" != "x" ] && [ -r "$6" ]
  then
    cp -f $6 ./config.json
    echo "./config.json" | cpio -H newc -o -A -F /tmp/initrd.img
    rm ./config.json
  fi
  cat /tmp/initrd.img | gzip -9 > $WORK_DIR/initrd.img
else
  cp $3 $WORK_DIR/initrd.img
fi

CMDLINE=$(cat $4)

echo "Setting up Legacy Boot..."
mkdir -p $WORK_DIR/isolinux
cp $ISO_BIN $WORK_DIR/isolinux
cp $LD32 $WORK_DIR/isolinux
echo "PROMPT 1
TIMEOUT 10
DEFAULT normal

LABEL normal
KERNEL /vmlinuz
APPEND initrd=/initrd.img $CMDLINE
" > $WORK_DIR/isolinux.cfg

echo 'NAME="T3kton Disks"
VERSION="0.0.0.0"
ID=t3kton
PRETTY_NAME="T3kton Disks"
VERSION_ID="18.04"
' > $WORK_DIR/os-release

echo "Building efiboot.img..."
sudo scripts/makeefiboot $WORK_DIR/isolinux/efiboot.img $2 $WORK_DIR/initrd.img $4 $WORK_DIR/os-release

xorriso -as mkisofs \
  -o $1 \
  -isohybrid-mbr $ISO_BOOT \
  -c isolinux/boot.cat \
  -b isolinux/isolinux.bin \
   -no-emul-boot -boot-load-size 4 -boot-info-table \
  -eltorito-alt-boot \
  -e isolinux/efiboot.img \
   -no-emul-boot \
   -isohybrid-gpt-basdat \
  $WORK_DIR

echo "Done!"
