#!/bin/bash
set -e

# $1 - output filename
# $2 - path to kernel
# $3 - path to initrd
# $4 - path to boot config
# $5 - path config-init (optional)
# $6 - path config.json (optional)
# $7 - path to boot menu (optional)


#size in 1k blocks, default is 60k ie 60meg disk
DISK_SIZE="60k"

MOUNT_POINT="build.images/mnt"

if [ ! -d $MOUNT_POINT ]
then
  mkdir -p $MOUNT_POINT
fi

if mountpoint -q $MOUNT_POINT
then
  echo "$MOUNT_POINT allready mounted, possibly a failed build needs to be cleaned up?"
  exit 1
fi

MBR_BIN="/usr/lib/syslinux/mbr/mbr.bin"

if [ ! -f "$MBR_BIN" ]
then
  echo "mbr.bin not found install syslinux-common"
  exit 1
fi

if [ ! -f /usr/bin/extlinux ]
then
  echo "extlinux not found install extlinux"
  exit 1
fi

if [ $( id -u ) != 0 ]
then
  echo "Must be root"
  exit 1
fi

rm -f $1

echo "Creating image..."
dd if=/dev/zero of=$1 bs=1k count=$DISK_SIZE
drive_loop=$(losetup -f --show $1)
echo "Using loop device '$drive_loop' for image..."

echo "Partitioning image..."
sfdisk $drive_loop << EOF
,,L,*
EOF

partition_loop=$(losetup -f --show -o 512 $drive_loop)
echo "Using loop device '$partition_loop' for partition..."

echo "Formatting partition..."
mke2fs -m 0 -I 128 $partition_loop
tune2fs -c 0 -i 0 $partition_loop

echo "Mounting partition..."
mount $partition_loop $MOUNT_POINT

echo "Copying in kernel and image..."
cp $2 $MOUNT_POINT/vmlinuz.img

if [ "x$5" != "x" ] || [ "x$6" != "x" ]
then
  echo "Injecting custom config..."
  cat $3 | gunzip > /tmp/initrd.img
  if [ "x$5" != "x" ] && [ -x "$5" ]
  then
    cp -f $5 ./config-init
    echo "./config-init" | cpio -H newc -o -A -F /tmp/initrd.img
    rm ./config-init
  fi
  if [ "x$6" != "x" ] && [ -r "$6" ]
  then
    cp -f $6 ./config.json
    echo "./config.json" | cpio -H newc -o -A -F /tmp/initrd.img
    rm ./config.json
  fi
  cat /tmp/initrd.img | gzip -9 > $WORK_DIR/initrd.img
else
  cp $3 $MOUNT_POINT/initrd.img
fi

echo "Copying in boot config..."
cp -f $4 $MOUNT_POINT/extlinux.conf

if [ "x$7" != "x" ] && [ -r "$7" ]
then
  echo "Injecting custom menu..."
  cp -f $7 $MOUNT_POINT/extlinux.menu
fi

echo "Installing bootloader..."
extlinux -i $MOUNT_POINT
umount $MOUNT_POINT
losetup -d $partition_loop

echo "Installing MBR..."
dd if=$MBR_BIN of=$drive_loop
sleep 1
sync
losetup -d $drive_loop
echo "Done!"
