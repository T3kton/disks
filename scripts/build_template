#!/bin/bash

# $1 - template
# $2 - output config-init filename
# $3 - output for config.json filename
# $4 - output for boot config file
# $5 - output directory name for extras

set -e
#set -x

export DIALOGRC="$PWD/template.rc"

HEIGHT=20
WIDTH=60

. templates/$1

DIALOG_TITLE="Questions for template $2"

NEED_CLEAR=

for i in `seq 0 $(( ${#QUESTION_LIST[@]} - 1 ))`;
do
  eval ENV_CHECK="\$TD_${QUESTION_LIST[$i]}" # prepending TD_ to not actidently catch things like HOSTNAME from existing env
  if [ "x$ENV_CHECK" != "x" ];
  then
    eval "${QUESTION_LIST[$i]}=\"$ENV_CHECK\""

  else
    if [ "x${TYPE_LIST[$i]}" = "xinputbox" ]
    then
      TMP="$(dialog --stdout --no-cancel --title "$DIALOG_TITLE" --inputbox "${DESC_LIST[$i]}" $HEIGHT $WIDTH ${DEFAULT_LIST[$i]})"

    elif [ "x${TYPE_LIST[$i]}" = "xyesno" ]
    then
      if [ "x${DEFAULT_LIST[$i]}" = "xno" ]
      then
        dialog --stdout --title "$DIALOG_TITLE" --defaultno --yesno "${DESC_LIST[$i]}" $HEIGHT $WIDTH && TMP="yes" || TMP="no"
      else
        dialog --stdout --title "$DIALOG_TITLE" --yesno "${DESC_LIST[$i]}" $HEIGHT $WIDTH && TMP="yes" || TMP="no"
      fi

    elif [[ "x${TYPE_LIST[$i]}" == xmenu:* ]]
    then
      ITEMS=$( echo ${TYPE_LIST[$i]} | cut -b6- )
      IFS='_' read -r -a ITEMS <<< "$ITEMS"
      TMP="$( dialog --stdout --no-cancel --title "$DIALOG_TITLE" --default-item "${DEFAULT_LIST[$i]}" --menu "${DESC_LIST[$i]}" $HEIGHT $WIDTH 6 "${ITEMS[@]}" )"

    else
      echo "Unknown question type '${TYPE_LIST[$i]}'"
      exit 1
    fi

    eval "${QUESTION_LIST[$i]}=\"$TMP\""

    NEED_CLEAR=y
  fi
done

if [ "x$NEED_CLEAR" == "xy" ]
then
  clear
fi

echo "Shortcut env exports:"
echo "---------------------------------------------------------------------"
for i in `seq 0 $(( ${#QUESTION_LIST[@]} - 1 ))`;
do
  NAME=${QUESTION_LIST[$i]}
  echo "export TD_${QUESTION_LIST[$i]}=\"${!NAME}\""
done
echo "---------------------------------------------------------------------"

post_process

STOP_AT=$(set | grep -n "^_=" | head -n1 | cut -d: -f1)
VAR_NAMES=($(set | head -n${STOP_AT} | cut -d= -f1))

for i in `seq 0 $(( ${#VAR_NAMES[@]} - 1 ))`;
do
  VAR=${VAR_NAMES[$i]}
  INIT="${INIT//__${VAR}__/$(eval echo '$'${VAR})}"
  CONFIG="${CONFIG//__${VAR}__/$(eval echo '$'${VAR})}"
  CMDLINE="${CMDLINE//__${VAR}__/$(eval echo '$'${VAR})}"
done

if [ ! -z "$INIT" ]
then
  echo "$INIT" > "$2"
  chmod +x $2
fi

if [ ! -z "$CONFIG" ]
then
  echo "$CONFIG" > "$3"
fi

echo "#!/bin/bash" > "$4"
echo "CMDLINE_LIST=(\"$CMDLINE\")" >> "$4"

if [ ! -d "$5" ]
then
  echo "extra directory '$5' not a directory"
  exit 1
fi

for item in $EXTRA_LIST
do
  type=${item#*.}
  case $type in
    tar.gz)
      tar -xzf $item -C $5
      ;;
    *)
      cp $item $5
      ;;
  esac

done
