#!/bin/sh

set -e

PWD=$(pwd)

install_base()
{
  $PWD/scripts/setup_base "$PWD/build.images/$ROOT_FS" "$PWD/src" "$PWD/build.deps"
  $PWD/scripts/install_kernel "$PWD/build.images/$ROOT_FS" "$PWD/src" "$PWD/build.deps"
}

install_dep()
{
  #  $1 - name of dep

  . $PWD/deps/$1

  install "$PWD/build.images/$ROOT_FS" "$PWD/src" "$PWD/build.deps/$1"

  # install's paramaters
  #  $1 - target root fs dir
  #  $2 - source dir
  #  $3 - dep build dir
}

install_src()
{
  #  $1 - name of src

  # for now we will do a big if statement, not all the src is "install" able
  if [ "x$1" = "xcontractor" ]
  then
    DESTDIR="$PWD/build.images/$ROOT_FS" make -C "$PWD/src/contractor" install
  elif [ "x$1" = "xlibconfig" ]
  then
    DESTDIR="$PWD/build.images/$ROOT_FS" make -C "$PWD/src/libconfig" install
  elif [ "x$1" = "xlibdrive" ]
  then
    DESTDIR="$PWD/build.images/$ROOT_FS" make -C "$PWD/src/libdrive" install
  elif [ "x$1" = "xlibhardware" ]
  then
    DESTDIR="$PWD/build.images/$ROOT_FS" make -C "$PWD/src/libhardware" install
  else
    echo "Unknown src target '$1'"
    exit 1
  fi
}

get_binaries()
{
  #  $1 - name of dep

  . $PWD/deps/$1

  binaries "$PWD/build.images/$ROOT_FS"
}

install()
{
  install_base

  lib_list=""

  for item in udev python $DEP_LIST
  do
    install_dep $item
    binary_list="$(get_binaries $item)"
    temp_libs="$(ldd $binary_list | grep -v 'not found' | grep -v 'not a dynamic executable' | awk '{print $3}')"
    lib_list="$(echo "$lib_list $temp_libs" | sort -u)"
  done

  for item in contractor $SRC_LIST
  do
    install_src $item
  done

  # these are allready installed by setup_base, as a part of libc
  lib_list="$(echo $lib_list | sed -r 's/[^ ]*(libcrypt|libutil|libc|libm|libdl|libpthread|libnsl|libnss_compat|libnss_files|libnss_dns|libresolv|librt|libcrypt)\.so[^ ]* //g')"
  lib_list="$(readlink -f $lib_list | sort -u)"

  for LIB in $lib_list
  do
    cp -L $LIB "$PWD/build.images/$ROOT_FS/lib"
  done
}
